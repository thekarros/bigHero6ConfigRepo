eureka:
  client:
    serviceUrl:
      defaultZone: ${eureka.instances}

kafka:
  bootstrap-server: 10.20.20.121:9092
  producer:
    studentPersonChangeTopic: changedStudentPerson-p01use2dev

aws:
  accessKey: '{cipher}AQICAHhwRLH9r5EwhXiI7DKT7Bu2NJ2KcnE9k/MeZthez+G0EAGMXC5/c93yF97pusZCeWdSAAAAcjBwBgkqhkiG9w0BBwagYzBhAgEAMFwGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMpA1sLcZQb0dwybHfAgEQgC9NO9RXR7Dn4cYmeSbAp5n05/wpawDjlEqGKz2w1vaVcEF8MG5LVnMadnCOgaauKQ=='
  secretKey: '{cipher}AQICAHhwRLH9r5EwhXiI7DKT7Bu2NJ2KcnE9k/MeZthez+G0EAGVby/wd9QLjOPOn02/2GggAAAAhzCBhAYJKoZIhvcNAQcGoHcwdQIBADBwBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDMIa0Q0NMMiA/40mEQIBEIBD8lmGj15FKc2Z7MzTKVSCbuc3T+96lqYbQ6RmPr2ZVSiDJY8LEdWFSb9MY7YGpgCQVHgxo5lW7yzNRh5N281JSWaYFw=='
  s3:
    region: us-east-2
    bucket: dev-image-profile
    folder:
      studentAvatar: students
    presigned:
      expireTime:
        studentAvatar: 3600

# DB Configs
spring:
  redis:
    host: redis.use2.karrostech.net
    port: 6379
    database: 0
    password: B8VZKjs4LL8a24Gq7zftw2M4eQvNmQ
    cacheDurations:
      STUDENT: 86400
  cloud:
    config:
      allowOverride: true
      overrideNone: true
      overrideSystemProperties: true
  h2:
    console:
      enabled: true
      settings.trace: true
      settings.web-allow-others: true
  jpa:
    show-sql: true
    generate-ddl: true
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        default_schema: master_data

edulog:
  datasource:
    # fix test env, please update again
    url: jdbc:h2:mem:Edulog;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;DATABASE_TO_UPPER=FALSE;INIT=create schema IF NOT EXISTS master_data
    username: sa
    password: sa
    driverClassName: org.h2.Driver
    test-while-idle: true
    validation-query: select 1
    tomcat:
      max-wait: 10000
      initialSize: 1
      max-active: 5
      test-on-borrow: true
    dev:
      url: jdbc:h2:mem:Edulog;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;DATABASE_TO_UPPER=FALSE;INIT=create schema IF NOT EXISTS master_data
      username: sa
      password: sa
      driverClassName: org.h2.Driver
      test-while-idle: true
      validation-query: select 1
      tomcat:
        max-wait: 10000
        initialSize: 1
        max-active: 5
        test-on-borrow: true


rds:
  driverClassName: org.postgresql.Driver
  url: jdbc:postgresql://db-stage.usw2.karrostech.net:5432/Edulog
  username: karros_prod_admin
  password: '{cipher}AQICAHhwRLH9r5EwhXiI7DKT7Bu2NJ2KcnE9k/MeZthez+G0EAGrx/wBTNFYFkMyWMs1zDiRAAAAezB5BgkqhkiG9w0BBwagbDBqAgEAMGUGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMbdsrRTlU6ozJEvsdAgEQgDjNLewA1V49MQQWNmqjsLYRDmsx+9K7TTNCaePFZ+qDLp0KS/Ock1Cvgg/T6hDEPBCdJqYByDDDnw=='

# Spring Security configurations are required for this application to work with the
# Karrostech Security dependency included in pom.xml.
security.jwt:
  tokenExpirationTime: ${security.jwt.duration.token} # Number of minutes
  refreshTokenExpTime: ${security.jwt.duration.refreshToken} # Minutes
  tokenIssuer: ${security.jwt.issuer}
  # base 64 encoded signing key
  tokenSigningKey: ${security.jwt.signature}
  secureAuthenticationEntryUrl: /api/**/students/**
  unsecurePathList: [/v2/api-docs/**, /configuration/ui, /swagger-resources, /configuration/security, /swagger-ui.html, /swagger-ui.html/**, /webjars/**, /swagger-resources/configuration/ui,
                     /swagger-resources/configuration/security, /manage/**, /api/v1/people ]

auth:
  credentials:
    clientId: '{cipher}AQICAHhwRLH9r5EwhXiI7DKT7Bu2NJ2KcnE9k/MeZthez+G0EAGmPuYgvi3Lf7P5TWnsf8JfAAAAhzCBhAYJKoZIhvcNAQcGoHcwdQIBADBwBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDJMYu4jRoIBsa6XbCQIBEIBD/A+aT/5ePQslezNxhmUdvJtoI+/BJDMfdOTqMzcyZKu4GPWTgG1ZWkXw1vlvk5dFz9Gx/xZRG8mfJuA3zM7kbzxECw=='
    clientSecret: '{cipher}AQICAHhwRLH9r5EwhXiI7DKT7Bu2NJ2KcnE9k/MeZthez+G0EAHb0IfPLp/eDFvfIcl5LQTSAAAAojCBnwYJKoZIhvcNAQcGoIGRMIGOAgEAMIGIBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDH4LBpJloA6W7YSLvwIBEIBbdqhIaNfX+NYqo5yckaU4vbeIjqt2haLWRDRejhl1XKZUTKXVBUonsrmw+NRl41HeDNLeLu3BLh8Rs/+TArRr9m01n7zHDwTQsn2TiNdLW2wSdVWWqSawrXad8Q=='
    grantType: client_credentials
    scope: EDP
  path: /api/v1/signin

gateway:
  endpoint: https://gateway-p01-stage.usw2.karrostech.net

microservices:
  person:
    serviceId: PERSONSERVICE
    get-student:
      endpoint: /api/v2/students
  tenants:
    serviceId: TENANTSERVICE
    get-school:
      endpoint: http://${microservices.tenants.serviceId}/api/v2.0/schools/
    get-tenant:
      endpoint: http://${microservices.tenants.serviceId}/api/v1/tenants/
    get-legacy-school:
      endpoint: http://${microservices.tenants.serviceId}/api/v1/schools

test:
  tenantId: f65f074c-c75d-4507-8b64-57eb9af7b646

management.security.enabled: false
management.context-path: /manage
security.basic.enabled: false
spring.metrics.export.statsd.host: localhost

hystrix.command.GetPerson.execution.isolation.thread.timeoutInMilliseconds: 3000
hystrix.threadpool.GetPerson.coreSize: 10
hystrix.threadpool.GetPerson.maximumSize: 500
hystrix.threadpool.GetPerson.allowMaximumSizeToDivergeFromCoreSize: true

hystrix.command.CreatePeople.execution.isolation.thread.timeoutInMilliseconds: 3000
hystrix.threadpool.CreatePeople.coreSize: 10
hystrix.threadpool.CreatePeople.maximumSize: 500
hystrix.threadpool.CreatePeople.allowMaximumSizeToDivergeFromCoreSize: true

hystrix.command.savePerson.execution.isolation.thread.timeoutInMilliseconds: 3000
hystrix.threadpool.savePerson.coreSize: 10
hystrix.threadpool.savePerson.maximumSize: 500
hystrix.threadpool.savePerson.allowMaximumSizeToDivergeFromCoreSize: true

hystrix.command.saveAddresses.execution.isolation.thread.timeoutInMilliseconds: 3000
hystrix.threadpool.saveAddresses.coreSize: 10
hystrix.threadpool.saveAddresses.maximumSize: 500
hystrix.threadpool.saveAddresses.allowMaximumSizeToDivergeFromCoreSize: true

hystrix.command.deleteAddresses.execution.isolation.thread.timeoutInMilliseconds: 3000
hystrix.threadpool.deleteAddresses.coreSize: 10
hystrix.threadpool.deleteAddresses.maximumSize: 500
hystrix.threadpool.deleteAddresses.allowMaximumSizeToDivergeFromCoreSize: true

hystrix.command.savePhoneNumbers.execution.isolation.thread.timeoutInMilliseconds: 3000
hystrix.threadpool.savePhoneNumbers.coreSize: 10
hystrix.threadpool.savePhoneNumbers.maximumSize: 500
hystrix.threadpool.savePhoneNumbers.allowMaximumSizeToDivergeFromCoreSize: true

hystrix.command.deletePhoneNumbers.execution.isolation.thread.timeoutInMilliseconds: 3000
hystrix.threadpool.deletePhoneNumbers.coreSize: 10
hystrix.threadpool.deletePhoneNumbers.maximumSize: 500
hystrix.threadpool.deletePhoneNumbers.allowMaximumSizeToDivergeFromCoreSize: true

hystrix.command.DeletePerson.execution.isolation.thread.timeoutInMilliseconds: 3000
hystrix.threadpool.DeletePerson.coreSize: 10
hystrix.threadpool.DeletePerson.maximumSize: 500
hystrix.threadpool.DeletePerson.allowMaximumSizeToDivergeFromCoreSize: true

hystrix.command.findByPersonId.execution.isolation.thread.timeoutInMilliseconds: 3000
hystrix.threadpool.findByPersonId.coreSize: 10
hystrix.threadpool.findByPersonId.maximumSize: 500
hystrix.threadpool.findByPersonId.allowMaximumSizeToDivergeFromCoreSize: true

hystrix.command.findPhoneNumbersByPersonId.execution.isolation.thread.timeoutInMilliseconds: 3000
hystrix.threadpool.findPhoneNumbersByPersonId.coreSize: 10
hystrix.threadpool.findPhoneNumbersByPersonId.maximumSize: 500
hystrix.threadpool.findPhoneNumbersByPersonId.allowMaximumSizeToDivergeFromCoreSize: true

hystrix.command.GetStudent.execution.isolation.thread.timeoutInMilliseconds: 3000
hystrix.threadpool.GetStudent.coreSize: 10
hystrix.threadpool.GetStudent.maximumSize: 500
hystrix.threadpool.GetStudent.allowMaximumSizeToDivergeFromCoreSize: true

hystrix.command.getStudentEntity.execution.isolation.thread.timeoutInMilliseconds: 3000
hystrix.threadpool.getStudentEntity.coreSize: 10
hystrix.threadpool.getStudentEntity.maximumSize: 500
hystrix.threadpool.getStudentEntity.allowMaximumSizeToDivergeFromCoreSize: true

hystrix.command.searchStudents.execution.isolation.thread.timeoutInMilliseconds: 3000
hystrix.threadpool.searchStudents.coreSize: 10
hystrix.threadpool.searchStudents.maximumSize: 500
hystrix.threadpool.searchStudents.allowMaximumSizeToDivergeFromCoreSize: true

hystrix.command.createStudents.execution.isolation.thread.timeoutInMilliseconds: 3000
hystrix.threadpool.createStudents.coreSize: 10
hystrix.threadpool.createStudents.maximumSize: 500
hystrix.threadpool.createStudents.allowMaximumSizeToDivergeFromCoreSize: true

hystrix.command.updateStudent.execution.isolation.thread.timeoutInMilliseconds: 3000
hystrix.threadpool.updateStudent.coreSize: 10
hystrix.threadpool.updateStudent.maximumSize: 500
hystrix.threadpool.updateStudent.allowMaximumSizeToDivergeFromCoreSize: true

hystrix.command.saveOrUpdateStudent.execution.isolation.thread.timeoutInMilliseconds: 3000
hystrix.threadpool.saveOrUpdateStudent.coreSize: 10
hystrix.threadpool.saveOrUpdateStudent.maximumSize: 500
hystrix.threadpool.saveOrUpdateStudent.allowMaximumSizeToDivergeFromCoreSize: true

hystrix.command.disableStudent.execution.isolation.thread.timeoutInMilliseconds: 3000
hystrix.threadpool.disableStudent.coreSize: 10
hystrix.threadpool.disableStudent.maximumSize: 500
hystrix.threadpool.disableStudent.allowMaximumSizeToDivergeFromCoreSize: true

hystrix.command.deletestudentDistrictId.execution.isolation.thread.timeoutInMilliseconds: 5000
hystrix.threadpool.deletestudentDistrictId.coreSize: 10
hystrix.threadpool.deletestudentDistrictId.maximumSize: 500
hystrix.threadpool.deletestudentDistrictId.allowMaximumSizeToDivergeFromCoreSize: true
