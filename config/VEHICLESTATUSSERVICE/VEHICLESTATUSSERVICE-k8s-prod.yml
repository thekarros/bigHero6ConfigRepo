eureka:
  client:
    serviceUrl:
      defaultZone: ${eureka.instances}

spring:
  cloud:
    stream:
      kafka:
        streams:
          bindings:
            liveEvent:
              consumer:
                applicationId: vehicleStatusService-p01usw1prod
                startOffset: latest
          binder:
            brokers: ${kafka-broker}
            applicationId: vehicleStatusService-p01usw1prod
            configuration:
              default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
              default.value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
              default.deserialization.exception.handler: org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
              commit.interval.ms: 1000
      bindings:
        liveEvent:
          destination: aggregateAVLEvents-p01usw1prod
          binder: kstream
      binders:
        kstream:
          type: kstream

spring.redis.host: redis-prod.usw1.karrostech.net
spring.redis.port: 6379
spring.redis.database: 4
spring.redis.password:

spring.redis.jedis.pool.max-active: 50
spring.redis.jedis.pool.max-wait: 5000ms
spring.redis.jedis.pool.min-idle: 10
spring.redis.jedis.pool.max-idle: 30

redis:
  channel:
    enable: false
    tenant_prefix: TENANT_

processed:
  events: 2103,1