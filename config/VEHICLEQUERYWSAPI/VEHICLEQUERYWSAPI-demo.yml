# Property file for local use. Will be used if spring.profiles.active is not set
eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka01-p01-demo.usw2.karrostech.net:1112/eureka/,http://eureka02-p01-demo.usw2.karrostech.net:1112/eureka/

ribbon.eureka.enabled: true

endpoints.sensitive: true
management.security.enabled: false
management.context-path: /

# Spring Security configurations
security.jwt:
  tokenExpirationTime: 120 # Number of minutes
  refreshTokenExpTime: 60 # Minutes
  tokenIssuer: http://karrostech.com
  # base 64 encoded signing key
  tokenSigningKey: '{cipher}AQICAHhwRLH9r5EwhXiI7DKT7Bu2NJ2KcnE9k/MeZthez+G0EAGsh0GXHEy3S3jOX9QXXT8yAAAAfjB8BgkqhkiG9w0BBwagbzBtAgEAMGgGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMRDWTMtLq5qBNuvpYAgEQgDvEFsvknk7vamQJiB5wJmwbF570MckoCVEqD8O7MVwpzzbK8pdXJ4dMDfFUeMcWL+eE/SaCae9u6QX4cQ=='
  secureAuthenticationEntryUrl: /api/**
  unsecurePathList: [/v2/api-docs/**, /configuration/ui, /swagger-resources, /configuration/security, /swagger-ui.html, /swagger-ui.html/**, /webjars/**, /swagger-resources/configuration/ui,
                     /swagger-resources/configuration/security, /manage/**]
security.basic.enabled: false

# DB Configs
spring:
  jpa:
    show-sql: false
    generate-ddl: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
      generate_statistics: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        ddl-auto: none
        default_schema: public
        hbm2ddl:
          import_files:

edulog:
  datasource:
    url: jdbc:postgresql://db-demo.usw2.karrostech.net:5432/Edulog
    username: karros_demo_admin
    password: '{cipher}AQICAHhwRLH9r5EwhXiI7DKT7Bu2NJ2KcnE9k/MeZthez+G0EAGAZqedu7TExJSmFH1p7+z6AAAAejB4BgkqhkiG9w0BBwagazBpAgEAMGQGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMy66nGIYPRS13pBG4AgEQgDeo559ch4bpvNdvIeZDhRxTc7iF6dJyM+fyUWw4pL6dH69vQlqPV1RgRyz2bZF/3ILPPQrxdjmP'
    driverClassName: org.postgresql.Driver
    test-while-idle: true
    validation-query: select 1;
    tomcat:
      max-wait: 10000
      initialSize: 2
      max-active: 5
      test-on-borrow: true
microservices:
  notifications:
    serviceId: NOTIFICATIONSERVICE
    createTopic:
      endpoint: http://${microservices.notifications.serviceId}/api/v2/subscriptions/topics
  tenants:
    serviceId: TENANTSERVICE
    getTenant:
      endpoint: http://${microservices.tenants.serviceId}/api/v2.0/tenants/

hystrix.command.GetVehicleByVehicleId.execution.isolation.thread.timeoutInMilliseconds: 5000
hystrix.threadpool.GetVehicleByVehicleId.coreSize: 10
hystrix.threadpool.GetVehicleByVehicleId.maximumSize: 500
hystrix.threadpool.GetVehicleByVehicleId.allowMaximumSizeToDivergeFromCoreSize: true
hystrix.command.GetVehicleTenantMappingsFromVin.execution.isolation.thread.timeoutInMilliseconds: 5000
hystrix.threadpool.GetVehicleTenantMappingsFromVin.coreSize: 10
hystrix.threadpool.GetVehicleTenantMappingsFromVin.maximumSize: 500
hystrix.threadpool.GetVehicleTenantMappingsFromVin.allowMaximumSizeToDivergeFromCoreSize: true
hystrix.command.GetVehicleTenantMappingsFromVins.execution.isolation.thread.timeoutInMilliseconds: 5000
hystrix.threadpool.GetVehicleTenantMappingsFromVins.coreSize: 10
hystrix.threadpool.GetVehicleTenantMappingsFromVins.maximumSize: 500
hystrix.threadpool.GetVehicleTenantMappingsFromVins.allowMaximumSizeToDivergeFromCoreSize: true
hystrix.command.GetAllVehicleTenantMappings.execution.isolation.thread.timeoutInMilliseconds: 5000
hystrix.threadpool.GetAllVehicleTenantMappings.coreSize: 10
hystrix.threadpool.GetAllVehicleTenantMappings.maximumSize: 500
hystrix.threadpool.GetAllVehicleTenantMappings.allowMaximumSizeToDivergeFromCoreSize: true
hystrix.command.GetAllVehicles.execution.isolation.thread.timeoutInMilliseconds: 5000
hystrix.threadpool.GetAllVehicles.coreSize: 10
hystrix.threadpool.GetAllVehicles.maximumSize: 500
hystrix.threadpool.GetAllVehicles.allowMaximumSizeToDivergeFromCoreSize: true
hystrix.command.GetVehiclesByTenantId.execution.isolation.thread.timeoutInMilliseconds: 5000
hystrix.threadpool.GetVehiclesByTenantId.coreSize: 10
hystrix.threadpool.GetVehiclesByTenantId.maximumSize: 500
hystrix.threadpool.GetVehiclesByTenantId.allowMaximumSizeToDivergeFromCoreSize: true
hystrix.command.UpdateVehicle.execution.isolation.thread.timeoutInMilliseconds: 5000
hystrix.threadpool.UpdateVehicle.coreSize: 10
hystrix.threadpool.UpdateVehicle.maximumSize: 500
hystrix.threadpool.UpdateVehicle.allowMaximumSizeToDivergeFromCoreSize: true
hystrix.command.GetVehicle.execution.isolation.thread.timeoutInMilliseconds: 5000
hystrix.threadpool.GetVehicle.coreSize: 10
hystrix.threadpool.GetVehicle.maximumSize: 500
hystrix.threadpool.GetVehicle.allowMaximumSizeToDivergeFromCoreSize: true
hystrix.command.AddVehicles.execution.isolation.thread.timeoutInMilliseconds: 5000
hystrix.threadpool.AddVehicles.coreSize: 10
hystrix.threadpool.AddVehicles.maximumSize: 500
hystrix.threadpool.AddVehicles.allowMaximumSizeToDivergeFromCoreSize: true
hystrix.command.getVehiclesWithDevices.execution.isolation.thread.timeoutInMilliseconds: 5000
hystrix.threadpool.getVehiclesWithDevices.coreSize: 10
hystrix.threadpool.getVehiclesWithDevices.maximumSize: 500
hystrix.threadpool.getVehiclesWithDevices.allowMaximumSizeToDivergeFromCoreSize: true
hystrix.command.updateVehicleWithDevice.execution.isolation.thread.timeoutInMilliseconds: 5000
hystrix.threadpool.updateVehicleWithDevice.coreSize: 10
hystrix.threadpool.updateVehicleWithDevice.maximumSize: 500
hystrix.threadpool.updateVehicleWithDevice.allowMaximumSizeToDivergeFromCoreSize: true
hystrix.command.getDevicesToTenantMappings.execution.isolation.thread.timeoutInMilliseconds: 5000
hystrix.threadpool.getDevicesToTenantMappings.coreSize: 10
hystrix.threadpool.getDevicesToTenantMappings.maximumSize: 500
hystrix.threadpool.getDevicesToTenantMappings.allowMaximumSizeToDivergeFromCoreSize: true
hystrix.command.createVehiclesAlongWithDevice.execution.isolation.thread.timeoutInMilliseconds: 5000
hystrix.threadpool.createVehiclesAlongWithDevice.coreSize: 10
hystrix.threadpool.createVehiclesAlongWithDevice.maximumSize: 500
hystrix.threadpool.createVehiclesAlongWithDevice.allowMaximumSizeToDivergeFromCoreSize: true
hystrix.command.getVinsToTenantMappings.execution.isolation.thread.timeoutInMilliseconds: 5000
hystrix.threadpool.getVinsToTenantMappings.coreSize: 10
hystrix.threadpool.getVinsToTenantMappings.maximumSize: 500
hystrix.threadpool.getVinsToTenantMappings.allowMaximumSizeToDivergeFromCoreSize: true
hystrix.command.createVehicleV4.execution.isolation.thread.timeoutInMilliseconds: 5000
hystrix.threadpool.createVehicleV4.coreSize: 10
hystrix.threadpool.createVehicleV4.maximumSize: 500
hystrix.threadpool.createVehicleV4.allowMaximumSizeToDivergeFromCoreSize: true
hystrix.command.createOrUpdateVehicle.execution.isolation.thread.timeoutInMilliseconds: 5000
hystrix.threadpool.createOrUpdateVehicle.coreSize: 10
hystrix.threadpool.createOrUpdateVehicle.maximumSize: 500
hystrix.threadpool.createOrUpdateVehicle.allowMaximumSizeToDivergeFromCoreSize: true

hystrix.command.getAllDeviceIdByTenantId.execution.isolation.thread.timeoutInMilliseconds: 5000
hystrix:threadpool.getAllDeviceIdByTenantId.coreSize: 10
hystrix.threadpool.getAllDeviceIdByTenantId.maximumSize: 500
hystrix.threadpool.getAllDeviceIdByTenantId.allowMaximumSizeToDivergeFromCoreSize: true

hystrix.command.getVehicle.execution.isolation.thread.timeoutInMilliseconds: 5000
hystrix:threadpool.getVehicle.coreSize: 10
hystrix.threadpool.getVehicle.maximumSize: 500
hystrix.threadpool.getVehicle.allowMaximumSizeToDivergeFromCoreSize: true

hystrix.command.getVehiclesByVins.execution.isolation.thread.timeoutInMilliseconds: 5000
hystrix:threadpool.getVehiclesByVins.coreSize: 10
hystrix.threadpool.getVehiclesByVins.maximumSize: 500
hystrix.threadpool.getVehiclesByVins.allowMaximumSizeToDivergeFromCoreSize: true

hystrix.command.getVehiclesWithQueries.execution.isolation.thread.timeoutInMilliseconds: 30000
hystrix:threadpool.getVehiclesWithQueries.coreSize: 10
hystrix.threadpool.getVehiclesWithQueries.maximumSize: 500
hystrix.threadpool.getVehiclesWithQueries.allowMaximumSizeToDivergeFromCoreSize: true

kafka:
  bootstrap-server: ${kafka-broker}
  producer:
    vehicleChanged: vehicleChanged-p01usw2demo

# Redis
spring.redis.host: redis-demo.usw2.karrostech.net
spring.redis.port: 6379
spring.redis.database: 4
spring.redis.password: '{cipher}AQICAHhwRLH9r5EwhXiI7DKT7Bu2NJ2KcnE9k/MeZthez+G0EAGsP0dcMRb2ccR0M5OZ9u2QAAAAfDB6BgkqhkiG9w0BBwagbTBrAgEAMGYGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQM5ZwTH/yi3i+KkGDHAgEQgDlZb3mBKRe9lvZ4savziOdKl57sdyDy7zH0flgd3GuayrFVgZ6X0It90pekXlX6ccRN3fTO0+dLXuE='

spring.redis.pool.max-active: 30
spring.redis.pool.max-wait: 5000
spring.redis.pool.min-idle: 10
spring.redis.pool.max-idle: 30