eureka:
  client:
    serviceUrl:
      defaultZone: ${eureka.instances}

spring.cloud.stream.bindings:
  input:
    destination: avlEvents
  output:
    destination: run-sub-es-results

spring.cloud.stream.kafka.streams:
  binder:
    application-id: runDetectionNNet
    brokers: 10.20.20.121:9092
    configuration:
      default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      default.value.serde: org.apache.kafka.common.serialization.Serdes$BytesSerde
      commit.interval.ms: 1000
      auto.offset.reset: latest

es:
  hosts:
    -
      name: ES-AWS
      url: ${elasticSearch.aws.url}
      username:
      password:
      protocol: https
      connectionTimeout: 10000
      socketTimeout: 60000
      parallelESCountThreads: 100
      port: ${elasticSearch.aws.port}
    -
      name: ES-CLUSTER
      url: ${elasticSearch.cloud.url}
      username: ${elasticSearch.cloud.username}
      password: ${elasticSearch.cloud.password}
      protocol: https
      connectionTimeout: 10000
      socketTimeout: 60000
      parallelESCountThreads: 100
      port: ${elasticSearch.cloud.port}
  tenantIndex:
    indexName: tenant
    type: doc
  directionIndex: rundirections
  realTimeVehicleEvent:
    indexName: realtimevehiclesevents
    type: doc
  query:
    detectRadius: 10m
    maxHitThreshold: 5
    eventSearchWindow: 10m

spring.redis.host: redis.use2.karrostech.net
spring.redis.port: 6379
spring.redis.password: B8VZKjs4LL8a24Gq7zftw2M4eQvNmQ

spring.redis.jedis.pool.max-active: 8
spring.redis.jedis.pool.max-wait: 5000ms
spring.redis.jedis.pool.min-idle: 1
spring.redis.jedis.pool.max-idle: 8

spring.redis.vehicle.host: ${spring.redis.host}
spring.redis.vehicle.port: ${spring.redis.port}
spring.redis.vehicle.database: 4
spring.redis.vehicle.password: ${spring.redis.password}
